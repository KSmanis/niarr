[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[dependency-groups]
lint = [
  "mypy>=1.12.1",
  "pre-commit>=4.0.1",
]
test = ["pytest-cov>=6.0.0"]

[project]
authors = [{email = "konstantinos.smanis@gmail.com", name = "Konstantinos Smanis"}]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Environment :: Console",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Operating System :: POSIX :: Linux",
  "Topic :: System :: Systems Administration",
]
dependencies = ["portage>=3.0.66.1"]
description = "Portage configuration linter."
license = "MIT"
name = "niarr"
readme = "README.md"
requires-python = ">=3.9"
version = "0.1.0"

[project.scripts]
niarr = "niarr.main:cli"

[project.urls]
Repository = "https://github.com/KSmanis/niarr"

[tool.coverage.report]
exclude_lines = [
  "if TYPE_CHECKING:",
  "pragma: no cover",
]
show_missing = true
skip_covered = true
skip_empty = true

[tool.coverage.run]
branch = true
relative_files = true

[tool.hatch.build.targets.sdist]
include = ["src/niarr"]

[tool.hatch.build.targets.wheel]
include = ["src/niarr"]

[tool.hatch.build.targets.wheel.sources]
"src/niarr" = "niarr"

[tool.mypy]
disallow_any_unimported = true
show_error_codes = true
strict = true

[tool.pytest.ini_options]
addopts = "--cov=src --cov-report=term --cov-report=xml --strict-markers"
testpaths = ["tests"]

[tool.ruff]
extend-select = [
  "B",  # flake8-bugbear
  "C4",  # flake8-comprehensions
  "I",  # isort
  "PGH",  # pygrep-hooks
  "PIE",  # fkae8-pie
  "PT",  # flake8-pytest-style
  "RUF",  # ruff
  "S",  # flake8-bandit
  "SIM",  # flake8-simplify
  "TCH",  # flake8-type-checking
  "UP",  # pyupgrade
]
src = ["src"]
target-version = "py39"

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-values-type = "tuple"

[tool.ruff.lint.flake8-type-checking]
exempt-modules = []
strict = true

[tool.ruff.lint.isort]
force-single-line = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"tests/**" = ["S101"]

[tool.tomlsort]
all = true
spaces_before_inline_comment = 2
trailing_comma_inline_array = true

[tool.uv]
default-groups = [
  "lint",
  "test",
]
required-version = "==0.9.1"
